name: ai
on: push

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache node_modules
        id: node_modules-cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Show cache status
        run: echo "Cache hit ${{ steps.node-modules-cache.outputs.cache-hit }}"

      - name: Install dependencies
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Run tests
        run: npm run test

      - name: Build
        run: npm run build

      - name: Save node_modules as artifact
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        uses: actions/upload-artifact@v4
        with:
          name: node_modules
          path: node_modules/

  test-again:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Download node_modules artifact
        uses: actions/download-artifact@v4
        with:
          name: node_modules
          path: node_modules/

      - name: Run additional tests
        run: |
          npm install --save-dev vitest
          npm run test

  clear-cache:
    runs-on: ubuntu-latest
    needs: [build-and-test, test-again]
    if: always()
    permissions:
      actions: write
    steps:
      - name: Setup GitHub CLI
        uses: sersoft-gmbh/setup-gh-cli-action@v2

      - name: Delete branch-specific caches
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "Fetching cache IDs for branch: ${{ github.ref_name }}"
          CACHE_IDS=$(gh cache list \
            --repo "${{ github.repository }}" \
            --ref "refs/heads/${{ github.ref_name }}" \
            --limit 100 --json id --jq '.[].id')
          echo "Deleting caches with IDs: $CACHE_IDS"

          if [ -z "$CACHE_IDS" ]; then
            echo "No caches found for branch: ${{ github.ref_name }}"
          else
            echo "Found cache Ids:"
            echo "$CACHE_IDS"
            echo "$CACHE_IDS" | while read cacheId; do
              echo "Deleting cache ID $cacheId"
              gh cache delete "$cacheId" --repo "${{ github.repository }}"
            done
          fi

  report:
    runs-on: ubuntu-latest
    needs: [build-and-test, test-again, clear-cache]
    if: failure()
    steps:
      - name: Output debug info
        run: |
          echo "something went wrong"
          echo "${{ toJSON(github) }}"

##https://github.com/actions/cache
###https://github.com/marketplace/actions/setup-github-cli
### https://github.com/sersoft-gmbh/setup-gh-cli-action
name: cache
on: push

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      # Add caching
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        ## format for chceking and calling cache: steps.<step_id>.outputs.<output_name>
        run: npm ci
      - name: Test code
        run: npm run test
      - run: npm run build
  checkout:
    name: Checkout code
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Output event data
        run: echo "${{ toJSON(github.event) }}" ### This step outputs the event data
      - name: Get code
        uses: actions/checkout@v3
  install:
    name: Install Dependencies
    needs: checkout
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3 ##T get list of all the actions https://github.com/actions/cache
        with:
          path: ~/.npm ##This is the path to cache the npm dependencies, the dependencies are stored in the ~/.npm directory
          key: depend-node-modules-${{hashFiles('**/package-lock.json')}} ### This is the key for the cache, it is based on the hash of the package-lock.json file, if the file changes, the cache is discarded and a new cache is created
          ###key also, suggest if the ache should be discarded or not, if the key changes, the cache is discarded and a new cache is createdhence give the name of cache that dinamic and can change as cache is discarded if the key changes
          ## hash files is used to create a unique key for the cache, if the package-lock.json file changes, the cache is discarded and a new cache is created and we are not using the old cache stored in the ~/.npm directory
      - name: Install dependencies
        run: npm ci
  chcekin:
    name: Run Tests
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install
      - name: Install Vitest
        run: npm install --save-dev vitest ## Install Vitest for testing
      - name: Run unit tests
        run: npm run test

  clear:
    runs-on: ubuntu-latest
    needs: install
    permissions:
      actions: write
    steps:
      - uses: sersoft-gmbh/setup-gh-cli-action@v2
      ### https://github.com/sersoft-gmbh/setup-gh-cli-action
      - name: Delete branchâ€‘specific caches
        env:
           GH_TOKEN: ${{ github.token }}   # Must have repo scope
        run: |
          echo "Fetching cache IDs for branch: ${{ github.ref_name }}"
          CACHE_IDS=$(gh cache list \
            --repo "${{ github.repository }}" \
            --ref "refs/head/${{ github.ref_name }}" \
            --limit 100 --json id --jq '.[].id')
          echo "Deleting caches with IDs: $CACHE_IDS"}}")

          if [ -z "$CACHE_IDS"]; then
            echo "No caches found for branch: ${{ github.ref_name }}"
          else
            echo "Found cache Ids:"
            echo "$CACHE_IDS"
            echo "$CACHE_IDS" | while read cacheId; do
              echo "Deleting cache ID $CACHE_IDS"
              gh cache delete "$cacheId" --repo "${{ github.repository }}"
            done
          fi
  report:
    runs-on: ubuntu-latest
    needs: [install, clear]
    if: failure()
    steps:
      - name: Output infroamtion
        run: |
          echo "something went wrong"
          echo "${{toJSON(github)}}"
